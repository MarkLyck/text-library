{"version":3,"file":"static/webpack/static/development/pages/index.js.b8bf62252fcba7edfbb1.hot-update.js","sources":["webpack:///./components/NewMessage/index.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { graphql, Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { Container, Input, Button } from \"../Inputs/styles\";\n\nconst CREATE_MESSAGE = gql`\n  mutation createMessage($text: String!, $categoryId: ID!) {\n    createMessage(text: $text, categoryId: $categoryId) {\n      id\n    }\n  }\n`;\n\nconst NewMessage = ({ category, refetch }) => {\n  const [text, setText] = useState(\"\");\n  const handleOnChange = event => setText(event.target.value);\n\n  const handleSubmit = createMessage => {\n    createMessage({\n      variables: { categoryId: category.id, text }\n    })\n      .then(() => setText(\"\"))\n      .then(refetch);\n  };\n\n  return (\n    <Mutation mutation={CREATE_MESSAGE}>\n      {createMessage => (\n        <Container>\n          <Input type=\"text\" value={text} onChange={handleOnChange} placeholder=\"\"/>\n          <Button onClick={handleSubmit.bind(null, createMessage)}>Add</Button>\n        </Container>\n      )}\n    </Mutation>\n  );\n};\n\nexport default NewMessage;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAOA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAQA;AACA;AACA;;;;A","sourceRoot":""}